{"version":3,"sources":["Header.tsx","Product.tsx","Login.tsx","App.tsx","reportWebVitals.ts","models.ts","count.ts","productRematch.ts","store.ts","index.tsx"],"names":["Header","token","localStorage","getItem","px","color","bg","alignItems","src","sx","width","height","borderRadius","p","fontWeight","to","mx","href","onClick","setItem","console","log","Product","props","data","description","img","name","price","textAlign","as","fontSize","Login","useForm","register","handleSubmit","errors","formState","history","useHistory","useEffect","setInterval","removeItem","userNameProps","type","required","passwordProps","onSubmit","fetch","then","res","text","temp","JSON","parse","userName","password","replace","alert","App","Cookies","set","path","useState","setData","dispatch","useSelector","state","count","useDispatch","product","priceSale","increment","addProduct","productList","map","item","index","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","models","createModel","multiplierName","reducers","payload","effects","incrementAsync","store","init","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b69dcc78.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { Box, Flex, Text, Image } from \"rebass\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\n\r\nexport const Header = (): JSX.Element => {\r\n  const checkLogin = true;\r\n\r\n  const token = localStorage.getItem(\"token\");\r\n  const logout = () => {\r\n    localStorage.setItem(\"token\", \"false\");\r\n    console.log(\"HAHAHHA\");\r\n  };\r\n  return (\r\n    <Flex px={2} color=\"white\" bg=\"green\" alignItems=\"center\">\r\n      <Image\r\n        src=\"../iphone.jpg\"\r\n        sx={{ width: 48, height: 48, borderRadius: 9999 }}\r\n      />\r\n      <Text p={2} fontWeight=\"bold\">\r\n        <Link to=\"/\">Home</Link>\r\n      </Text>\r\n      <Box mx=\"auto\" />\r\n      <Link to=\"/fdf\">Profile</Link>\r\n      {token !== \"true\" ? (\r\n        <Link to=\"/login\">Login</Link>\r\n      ) : (\r\n        <Link to=\"/logout\">\r\n          <a href=\"\" onClick={logout}>\r\n            LOGOUT\r\n          </a>\r\n        </Link>\r\n      )}\r\n    </Flex>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { Box, Card, Heading, Image, Text } from \"rebass\";\r\n\r\ntype ProductInfo = {\r\n  name: string;\r\n  price: number;\r\n  priceSale?: number;\r\n  description: string;\r\n  img: string;\r\n};\r\n\r\ntype ProductProps = {\r\n  data: ProductInfo;\r\n};\r\n\r\nexport const Product = (props: ProductProps): JSX.Element => {\r\n  const { data } = props;\r\n  const { description, img, name, price } = data;\r\n  return (\r\n    <Card width={1 / 4} height=\"100\" textAlign=\"center\">\r\n      <Image width={200} height={200} src={img} />\r\n      <Box px={2}>\r\n        <Heading as=\"h3\">{name}</Heading>\r\n        <Text fontSize={1}>Price:{price}</Text>\r\n        <Text fontSize={0}>{description}</Text>\r\n      </Box>\r\n    </Card>\r\n  );\r\n};\r\n","import React, { useEffect } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ntype DataInfo = {\r\n  userName: string;\r\n  password: string;\r\n};\r\n\r\nexport const Login = (): JSX.Element => {\r\n  const {\r\n    register,\r\n    handleSubmit,\r\n    formState: { errors },\r\n  } = useForm<DataInfo>();\r\n\r\n  const keyUserName = \"userName\";\r\n  const keyPassword = \"password\";\r\n  let history = useHistory();\r\n\r\n  const loginAPI = (data: DataInfo) => {\r\n    fetch(\"http://localhost:9000/testAPI/login\")\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        const temp = JSON.parse(res) as DataInfo;\r\n        if (\r\n          data.userName === temp.userName &&\r\n          data.password === temp.password\r\n        ) {\r\n          localStorage.setItem(\"token\", \"true\");\r\n          history.replace(\"/\");\r\n          alert(\"LOGIN Success\");\r\n        } else alert(\"LOGIN FAIL\");\r\n      });\r\n  };\r\n\r\n  const setTimeOut = () => {\r\n    let time = 60 * 1000;\r\n    setInterval(() => {\r\n      localStorage.removeItem(\"token\");\r\n    }, time);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setTimeOut();\r\n  }, []);\r\n\r\n  const userNameProps = {\r\n    type: \"text\",\r\n    ...register(keyUserName, { required: true }),\r\n  };\r\n\r\n  const passwordProps = {\r\n    type: \"password\",\r\n    ...register(keyPassword),\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit(loginAPI)}>\r\n      User name\r\n      <input {...userNameProps} />\r\n      {errors.userName?.type === \"required\" && (\r\n        <div>You must enter your name.</div>\r\n      )}\r\n      Pass word\r\n      <input {...passwordProps} />\r\n      <button>LOGIN</button>\r\n    </form>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Flex } from \"rebass\";\r\nimport \"./App.css\";\r\nimport { Header } from \"./Header\";\r\nimport { Product } from \"./Product\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { Login } from \"./Login\";\r\nimport { Dispatch, RootState } from \"./store\";\r\nimport { Provider, useDispatch, useSelector } from \"react-redux\";\r\nimport Cookies from \"universal-cookie\";\r\n\r\ntype ProductProps = {\r\n  name: string;\r\n  price: number;\r\n  priceSale?: number;\r\n  description: string;\r\n  img: string;\r\n};\r\n\r\nconst App = () => {\r\n  const cookies = new Cookies();\r\n  cookies.set(\"mycat\", \"Pacman\", { path: \"/\" });\r\n\r\n  const [data, setData] = useState<ProductProps[]>([\r\n    {\r\n      description: \"\",\r\n      price: 0,\r\n      name: \"\",\r\n      img: \"\",\r\n    },\r\n  ]);\r\n\r\n  const callAPI = () => {\r\n    fetch(\"https://6098f90399011f001713fd6d.mockapi.io/getProduct/product\")\r\n      .then((res) => res.text())\r\n      .then((res) => {\r\n        setData(JSON.parse(res));\r\n      });\r\n  };\r\n\r\n  const countState = useSelector((state: RootState) => state.count);\r\n  const dispatch = useDispatch<Dispatch>();\r\n\r\n  const product = {\r\n    name: \"Áo thun nam\",\r\n    price: 40000,\r\n    priceSale: 35000,\r\n    description: \"Áo thun nam đẹp, mặc thoáng mát\",\r\n    img: \"../aothun.jpg\",\r\n  };\r\n\r\n  useEffect(() => {\r\n    callAPI();\r\n    dispatch.count.increment(43);\r\n    dispatch.product.addProduct(product);\r\n  }, []);\r\n\r\n  const productList = data.map((item, index) => {\r\n    return <Product key={index} data={item} />;\r\n  });\r\n\r\n  return (\r\n    <Router>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/login\">\r\n          <Login />\r\n        </Route>\r\n        <Route exact path=\"/\">\r\n          <Flex>{productList}</Flex>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { Models } from \"@rematch/core\";\r\nimport { count } from \"./count\";\r\nimport { product } from \"./productRematch\";\r\n\r\nexport interface RootModel extends Models<RootModel> {\r\n  count: typeof count;\r\n  product: typeof product;\r\n}\r\n\r\nexport const models: RootModel = { count, product };\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\ntype Names = \"custom\";\r\ntype ComplexCount = {\r\n  count: number;\r\n  multiplierName?: Names;\r\n};\r\n\r\nexport const count = createModel<RootModel>()({\r\n  state: {\r\n    count: 0,\r\n    multiplierName: \"custom\",\r\n  } as ComplexCount,\r\n  reducers: {\r\n    increment(state, payload: number) {\r\n      return {\r\n        count: state.count + payload,\r\n      };\r\n    },\r\n  },\r\n  effects: (dispatch) => ({\r\n    incrementAsync(payload: number, state) {\r\n      dispatch.count.increment(payload);\r\n    },\r\n  }),\r\n});\r\n","import { createModel } from \"@rematch/core\";\r\nimport { RootModel } from \"./models\";\r\n\r\ntype ProductInfo = {\r\n  name: string;\r\n  price: number;\r\n  priceSale?: number;\r\n  description: string;\r\n  img: string;\r\n};\r\n\r\nexport const product = createModel<RootModel>()({\r\n  state: {\r\n    name: \"\",\r\n    price: 0,\r\n    priceSale: 0,\r\n    description: \"\",\r\n    img: \"\",\r\n  } as ProductInfo,\r\n  reducers: {\r\n    addProduct(state, payload: ProductInfo) {\r\n      return {\r\n        ...state,\r\n        payload,\r\n      };\r\n    },\r\n  },\r\n});\r\n","import { init, RematchDispatch, RematchRootState } from \"@rematch/core\";\r\nimport { models, RootModel } from \"./models\";\r\n\r\nexport const store = init({\r\n  models,\r\n});\r\n\r\nexport type Store = typeof store;\r\nexport type Dispatch = RematchDispatch<RootModel>;\r\nexport type RootState = RematchRootState<RootModel>;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}